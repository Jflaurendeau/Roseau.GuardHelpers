name: Continuous Integration ♾️⬇️

on:
  push:
    branches:
      - main
      - develop
    paths-ignore:
      - "docs/**"
      - "*.md"
  fork:
    branches:
      - main
      - develop
    paths-ignore:
      - "docs/**"
      - "*.md"
  pull_request:
    branches:
      - main
      - develop
    paths-ignore:
      - "docs/**"
      - "*.md"

env:
  DOTNET_VERSION: "6.x"

jobs:
  Build-and-Tests:
    runs-on: windows-latest
    timeout-minutes: 10
    steps:
      - name: Check out code 👀
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup .NET ⚒️
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      
      - name: Set up JDK 11 (For SonarCloud)
        uses: actions/setup-java@v1
        with:
          java-version: 1.11

      - name: Restore packages and dependencies 📥📦
        run: dotnet restore
      
      - name: Cache SonarCloud Packages ☁️📦
        uses: actions/cache@v1
        with: 
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner ☁️🕵️📝
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner ☁️🕵️
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: Build 👷‍♀🏗️
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
             .\.sonar\scanner\dotnet-sonarscanner begin /k:"Jflaurendeau_Roseau.GuardHelpers" /o:"jflaurendeau" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
             dotnet build -c Release --no-restore
             .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

      - name: Run tests 🩺🔬🧑‍🔬
        run: dotnet test -c Release --no-restore

  Semantic-versioning:
    runs-on: ubuntu-latest
    needs: Build-and-Tests
    timeout-minutes: 10
    steps:
      - name: Check out code 👀
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Semantic versioning
        uses: PaulHatch/semantic-version@v4.0.2
        with:
          tag_prefix: "v"
          major_pattern: "BREAKING CHANGE:"
          minor_pattern: "Feature:"
          format: "v${major}.${minor}.${patch}-Pre-release${increment}"
